// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Icon {
  Workout
}

enum HabitStatus {
  Pending
  Incomplete
  Complete
}

enum RewardType {
  OneTime
  Repeatable
}

model Habit {
  id        Int         @id @default(autoincrement())
  userId    String
  title     String
  icon      Icon?
  frequency Int       @default(1)
  createdOn DateTime

  habitDays HabitDay[]
}

model HabitDay {
  id      Int         @id @default(autoincrement())
  habitId Int
  status  HabitStatus
  date    DateTime

  habit   Habit       @relation(fields: [habitId], references: [id])

  @@unique(fields: [habitId, date])
}

model Reward {
  id            Int         @id @default(autoincrement())
  userId        String
  cost          Int
  type          RewardType
  icon          Icon

  title         String
  description   String

  redeemed      Int
  lastRedeemed  DateTime
}
